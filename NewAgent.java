
/**
 * class NewAgent
 *
 * This is a "trial" agent that is being used to test a new algorithm for
 * finding the shortest path to the goal. This algorithm looks at 
 * sequences of length 8 in episodic memory and combines the scores from
 * the positional weight matrix, a constituency/substring match algorithm, and the
 * number of steps to the goal to find the best possible
 * next move.
 *
 * @author: Sara Meisburger and Christine Chen
 *
 */

public class NewAgent
{
  //episodic memory generated by a "helper" StateMachineAgent
  //for this little NewAgent to use
  protected ArrayList<Episode> generateEpisodicMemory;

  /**
  *
  */
  public static void main(String[] args)
  {
    //create a StateMachineAgent object, have it
    //roam around for a while, and then stash its episodic memory
    //away in genEpisodicMemory
    StateMachineAgent gilligan = new StateMachineAgent();
    gilligan.exploreEnvironment();
    generateEpisodicMemory = gilligan.episodicMemory;

  }
}
